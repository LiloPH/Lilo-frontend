/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthenticationImport } from './routes/_authentication'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticationDashboardIndexImport } from './routes/_authentication/dashboard/index'
import { Route as AuthenticationDashboardUserImport } from './routes/_authentication/dashboard/user'
import { Route as AuthenticationDashboardToursImport } from './routes/_authentication/dashboard/tours'
import { Route as AuthenticationDashboardRoutesImport } from './routes/_authentication/dashboard/routes'
import { Route as AuthenticationDashboardCreateTourImport } from './routes/_authentication/dashboard/create-tour'
import { Route as AuthenticationDashboardAnalyticsImport } from './routes/_authentication/dashboard/analytics'
import { Route as AuthenticationDashboardTourMapTourIdImport } from './routes/_authentication/dashboard/tour-map/$tourId'
import { Route as AuthenticationDashboardMapRouteIdImport } from './routes/_authentication/dashboard/map/$routeId'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRoute = AuthenticationImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationDashboardIndexRoute =
  AuthenticationDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationDashboardUserRoute =
  AuthenticationDashboardUserImport.update({
    id: '/dashboard/user',
    path: '/dashboard/user',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationDashboardToursRoute =
  AuthenticationDashboardToursImport.update({
    id: '/dashboard/tours',
    path: '/dashboard/tours',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationDashboardRoutesRoute =
  AuthenticationDashboardRoutesImport.update({
    id: '/dashboard/routes',
    path: '/dashboard/routes',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationDashboardCreateTourRoute =
  AuthenticationDashboardCreateTourImport.update({
    id: '/dashboard/create-tour',
    path: '/dashboard/create-tour',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationDashboardAnalyticsRoute =
  AuthenticationDashboardAnalyticsImport.update({
    id: '/dashboard/analytics',
    path: '/dashboard/analytics',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationDashboardTourMapTourIdRoute =
  AuthenticationDashboardTourMapTourIdImport.update({
    id: '/dashboard/tour-map/$tourId',
    path: '/dashboard/tour-map/$tourId',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticationDashboardMapRouteIdRoute =
  AuthenticationDashboardMapRouteIdImport.update({
    id: '/dashboard/map/$routeId',
    path: '/dashboard/map/$routeId',
    getParentRoute: () => AuthenticationRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_authentication/dashboard/analytics': {
      id: '/_authentication/dashboard/analytics'
      path: '/dashboard/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof AuthenticationDashboardAnalyticsImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/dashboard/create-tour': {
      id: '/_authentication/dashboard/create-tour'
      path: '/dashboard/create-tour'
      fullPath: '/dashboard/create-tour'
      preLoaderRoute: typeof AuthenticationDashboardCreateTourImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/dashboard/routes': {
      id: '/_authentication/dashboard/routes'
      path: '/dashboard/routes'
      fullPath: '/dashboard/routes'
      preLoaderRoute: typeof AuthenticationDashboardRoutesImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/dashboard/tours': {
      id: '/_authentication/dashboard/tours'
      path: '/dashboard/tours'
      fullPath: '/dashboard/tours'
      preLoaderRoute: typeof AuthenticationDashboardToursImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/dashboard/user': {
      id: '/_authentication/dashboard/user'
      path: '/dashboard/user'
      fullPath: '/dashboard/user'
      preLoaderRoute: typeof AuthenticationDashboardUserImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/dashboard/': {
      id: '/_authentication/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticationDashboardIndexImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/dashboard/map/$routeId': {
      id: '/_authentication/dashboard/map/$routeId'
      path: '/dashboard/map/$routeId'
      fullPath: '/dashboard/map/$routeId'
      preLoaderRoute: typeof AuthenticationDashboardMapRouteIdImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/dashboard/tour-map/$tourId': {
      id: '/_authentication/dashboard/tour-map/$tourId'
      path: '/dashboard/tour-map/$tourId'
      fullPath: '/dashboard/tour-map/$tourId'
      preLoaderRoute: typeof AuthenticationDashboardTourMapTourIdImport
      parentRoute: typeof AuthenticationImport
    }
  }
}

// Create and export the route tree

interface AuthenticationRouteChildren {
  AuthenticationDashboardAnalyticsRoute: typeof AuthenticationDashboardAnalyticsRoute
  AuthenticationDashboardCreateTourRoute: typeof AuthenticationDashboardCreateTourRoute
  AuthenticationDashboardRoutesRoute: typeof AuthenticationDashboardRoutesRoute
  AuthenticationDashboardToursRoute: typeof AuthenticationDashboardToursRoute
  AuthenticationDashboardUserRoute: typeof AuthenticationDashboardUserRoute
  AuthenticationDashboardIndexRoute: typeof AuthenticationDashboardIndexRoute
  AuthenticationDashboardMapRouteIdRoute: typeof AuthenticationDashboardMapRouteIdRoute
  AuthenticationDashboardTourMapTourIdRoute: typeof AuthenticationDashboardTourMapTourIdRoute
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationDashboardAnalyticsRoute: AuthenticationDashboardAnalyticsRoute,
  AuthenticationDashboardCreateTourRoute:
    AuthenticationDashboardCreateTourRoute,
  AuthenticationDashboardRoutesRoute: AuthenticationDashboardRoutesRoute,
  AuthenticationDashboardToursRoute: AuthenticationDashboardToursRoute,
  AuthenticationDashboardUserRoute: AuthenticationDashboardUserRoute,
  AuthenticationDashboardIndexRoute: AuthenticationDashboardIndexRoute,
  AuthenticationDashboardMapRouteIdRoute:
    AuthenticationDashboardMapRouteIdRoute,
  AuthenticationDashboardTourMapTourIdRoute:
    AuthenticationDashboardTourMapTourIdRoute,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardRoute
  '/dashboard/analytics': typeof AuthenticationDashboardAnalyticsRoute
  '/dashboard/create-tour': typeof AuthenticationDashboardCreateTourRoute
  '/dashboard/routes': typeof AuthenticationDashboardRoutesRoute
  '/dashboard/tours': typeof AuthenticationDashboardToursRoute
  '/dashboard/user': typeof AuthenticationDashboardUserRoute
  '/dashboard': typeof AuthenticationDashboardIndexRoute
  '/dashboard/map/$routeId': typeof AuthenticationDashboardMapRouteIdRoute
  '/dashboard/tour-map/$tourId': typeof AuthenticationDashboardTourMapTourIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardRoute
  '/dashboard/analytics': typeof AuthenticationDashboardAnalyticsRoute
  '/dashboard/create-tour': typeof AuthenticationDashboardCreateTourRoute
  '/dashboard/routes': typeof AuthenticationDashboardRoutesRoute
  '/dashboard/tours': typeof AuthenticationDashboardToursRoute
  '/dashboard/user': typeof AuthenticationDashboardUserRoute
  '/dashboard': typeof AuthenticationDashboardIndexRoute
  '/dashboard/map/$routeId': typeof AuthenticationDashboardMapRouteIdRoute
  '/dashboard/tour-map/$tourId': typeof AuthenticationDashboardTourMapTourIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authentication': typeof AuthenticationRouteWithChildren
  '/_dashboard': typeof DashboardRoute
  '/_authentication/dashboard/analytics': typeof AuthenticationDashboardAnalyticsRoute
  '/_authentication/dashboard/create-tour': typeof AuthenticationDashboardCreateTourRoute
  '/_authentication/dashboard/routes': typeof AuthenticationDashboardRoutesRoute
  '/_authentication/dashboard/tours': typeof AuthenticationDashboardToursRoute
  '/_authentication/dashboard/user': typeof AuthenticationDashboardUserRoute
  '/_authentication/dashboard/': typeof AuthenticationDashboardIndexRoute
  '/_authentication/dashboard/map/$routeId': typeof AuthenticationDashboardMapRouteIdRoute
  '/_authentication/dashboard/tour-map/$tourId': typeof AuthenticationDashboardTourMapTourIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard/analytics'
    | '/dashboard/create-tour'
    | '/dashboard/routes'
    | '/dashboard/tours'
    | '/dashboard/user'
    | '/dashboard'
    | '/dashboard/map/$routeId'
    | '/dashboard/tour-map/$tourId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard/analytics'
    | '/dashboard/create-tour'
    | '/dashboard/routes'
    | '/dashboard/tours'
    | '/dashboard/user'
    | '/dashboard'
    | '/dashboard/map/$routeId'
    | '/dashboard/tour-map/$tourId'
  id:
    | '__root__'
    | '/'
    | '/_authentication'
    | '/_dashboard'
    | '/_authentication/dashboard/analytics'
    | '/_authentication/dashboard/create-tour'
    | '/_authentication/dashboard/routes'
    | '/_authentication/dashboard/tours'
    | '/_authentication/dashboard/user'
    | '/_authentication/dashboard/'
    | '/_authentication/dashboard/map/$routeId'
    | '/_authentication/dashboard/tour-map/$tourId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
  DashboardRoute: typeof DashboardRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticationRoute: AuthenticationRouteWithChildren,
  DashboardRoute: DashboardRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authentication",
        "/_dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authentication": {
      "filePath": "_authentication.tsx",
      "children": [
        "/_authentication/dashboard/analytics",
        "/_authentication/dashboard/create-tour",
        "/_authentication/dashboard/routes",
        "/_authentication/dashboard/tours",
        "/_authentication/dashboard/user",
        "/_authentication/dashboard/",
        "/_authentication/dashboard/map/$routeId",
        "/_authentication/dashboard/tour-map/$tourId"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx"
    },
    "/_authentication/dashboard/analytics": {
      "filePath": "_authentication/dashboard/analytics.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/dashboard/create-tour": {
      "filePath": "_authentication/dashboard/create-tour.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/dashboard/routes": {
      "filePath": "_authentication/dashboard/routes.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/dashboard/tours": {
      "filePath": "_authentication/dashboard/tours.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/dashboard/user": {
      "filePath": "_authentication/dashboard/user.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/dashboard/": {
      "filePath": "_authentication/dashboard/index.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/dashboard/map/$routeId": {
      "filePath": "_authentication/dashboard/map/$routeId.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/dashboard/tour-map/$tourId": {
      "filePath": "_authentication/dashboard/tour-map/$tourId.tsx",
      "parent": "/_authentication"
    }
  }
}
ROUTE_MANIFEST_END */
